provider "google" {
  project = "eastern-crawler-342617"
  region  = "us-west4"
  zone    = "us-west4-a"
}
terraform {
  backend "gcs" {
    bucket = "alerts-terraform"
    prefix = "terraform_state"
  }
}

resource "google_monitoring_notification_channel" "email0" {
  display_name = "Email Notification Channel"
  project     = "eastern-crawler-342617"
  enabled      = true
  type        = "email"
 labels = {
    email_address = "shreya@collidus.xyz"
  }

}
output "email0_id" {
  value = "${google_monitoring_notification_channel.email0.name}"
}


resource "google_monitoring_alert_policy" "vm_cpu" {
  display_name = "VM Instance CPU Alert Policy"
  project      = "eastern-crawler-342617"
  enabled      = true
#   user_labels  = var.policy_labels

/// Notification channel

  notification_channels = [
    "${google_monitoring_notification_channel.email0.name}"
  ]

  alert_strategy {
    auto_close = var.vm_cpu_alert_policy_parameters.auto_close_interval
  }

  combiner = "OR"

  # trouble conditions
  conditions {
    display_name = "CPU Utilization for VM in TROUBLE"
    condition_threshold {
      comparison      = "COMPARISON_GT"
      duration        = var.vm_cpu_alert_policy_parameters.threshold_duration_trouble
      filter          = "metric.type=\"compute.googleapis.com/instance/cpu/utilization\" resource.type=\"gce_instance\" ${var.vm_filter}"
      threshold_value = var.vm_cpu_alert_policy_parameters.threshold_value_trouble

      aggregations {
        alignment_period   = "60s"
        group_by_fields    = []
        per_series_aligner = "ALIGN_MEAN"
      }

      trigger {
        count   = 1
        percent = 0
      }
    }
  }

  # critical conditions
  conditions {
    display_name = "CPU Utilization for VM in CRITICAL"
    condition_threshold {
      comparison      = "COMPARISON_GT"
      duration        = var.vm_cpu_alert_policy_parameters.threshold_duration_critical
      filter          = "metric.type=\"compute.googleapis.com/instance/cpu/utilization\" resource.type=\"gce_instance\" ${var.vm_filter}"
      threshold_value = var.vm_cpu_alert_policy_parameters.threshold_value_critical

      aggregations {
        alignment_period   = "60s"
        group_by_fields    = []
        per_series_aligner = "ALIGN_MEAN"
      }

      trigger {
        count   = 1
        percent = 0
      }
    }
  }

  

  timeouts {}
}


resource "google_monitoring_alert_policy" "vm_memory" {
  display_name = "VM Instance Memory Alert Policy"
  project      = "eastern-crawler-342617"
  enabled      = true
#   user_labels  = var.policy_labels

  notification_channels = [
    "${google_monitoring_notification_channel.email0.name}"
  ]

  alert_strategy {
    auto_close = var.vm_mem_alert_policy_parameters.auto_close_interval
  }

  combiner = "OR"

  # trouble conditions
  conditions {
    display_name = "Memory Utilization for VM in TROUBLE"
    condition_threshold {
      comparison      = "COMPARISON_GT"
      duration        = var.vm_mem_alert_policy_parameters.threshold_duration_trouble
      filter          = "metric.type=\"agent.googleapis.com/memory/percent_used\" resource.type=\"gce_instance\" metric.label.\"state\"=\"used\" ${var.vm_filter}"
      threshold_value = var.vm_mem_alert_policy_parameters.threshold_value_trouble

      aggregations {
        alignment_period   = "60s"
        group_by_fields    = []
        per_series_aligner = "ALIGN_MEAN"
      }

      trigger {
        count   = 1
        percent = 0
      }
    }
  }

  # critical conditions
  conditions {
    display_name = "Memory Utilization for VM in CRITICAL"
    condition_threshold {
      comparison      = "COMPARISON_GT"
      duration        = var.vm_mem_alert_policy_parameters.threshold_duration_critical
      filter          = "metric.type=\"agent.googleapis.com/memory/percent_used\" resource.type=\"gce_instance\" metric.label.\"state\"=\"used\" ${var.vm_filter}"
      threshold_value = var.vm_mem_alert_policy_parameters.threshold_value_critical

      aggregations {
        alignment_period   = "60s"
        group_by_fields    = []
        per_series_aligner = "ALIGN_MEAN"
      }

      trigger {
        count   = 1
        percent = 0
      }
    }
  }

  

  timeouts {}
}


resource "google_monitoring_alert_policy" "vm_disk" {
  display_name = "VM Instance Disk Alert Policy"
  project      = "eastern-crawler-342617"
  enabled      = true
#   user_labels  = var.policy_labels

  notification_channels = [
    "${google_monitoring_notification_channel.email0.name}"
  ]

  alert_strategy {
    auto_close = var.vm_disk_alert_policy_parameters.auto_close_interval
  }

  combiner = "OR"

  # trouble conditions
  conditions {
    display_name = "Disk Utilization for VM in TROUBLE"
    condition_threshold {
      comparison      = "COMPARISON_GT"
      duration        = var.vm_disk_alert_policy_parameters.threshold_duration_trouble
      filter          = "metric.type=\"agent.googleapis.com/disk/percent_used\" resource.type=\"gce_instance\" metric.label.\"state\"=\"used\" ${var.vm_filter} ${var.vm_disk_alert_policy_parameters.filter}"
      threshold_value = var.vm_disk_alert_policy_parameters.threshold_value_trouble

      aggregations {
        alignment_period   = "60s"
        group_by_fields    = []
        per_series_aligner = "ALIGN_MEAN"
      }

      trigger {
        count   = 1
        percent = 0
      }
    }
  }

  # critical conditions
  conditions {
    display_name = "Disk Utilization for VM in CRITICAL"
    condition_threshold {
      comparison      = "COMPARISON_GT"
      duration        = var.vm_disk_alert_policy_parameters.threshold_duration_critical
      filter          = "metric.type=\"agent.googleapis.com/disk/percent_used\" resource.type=\"gce_instance\" metric.label.\"state\"=\"used\" ${var.vm_filter} ${var.vm_disk_alert_policy_parameters.filter}"
      threshold_value = var.vm_disk_alert_policy_parameters.threshold_value_critical

      aggregations {
        alignment_period   = "60s"
        group_by_fields    = []
        per_series_aligner = "ALIGN_MEAN"
      }

      trigger {
        count   = 1
        percent = 0
      }
    }
  }

  

  timeouts {}
}






# =========================
# variables .tf
# =========================


# variable "project" {

# }

# variable "policy_labels" {

# }



# vm policies
variable "vm_filter" {
  default = ""
}
variable "vm_cpu_alert_policy_parameters" {
  default = {
    auto_close_interval         = "604800s",
    threshold_duration_trouble  = "300s",
    threshold_value_trouble     = 0.8,
    threshold_duration_critical = "300s",
    threshold_value_critical    = 0.9,
    
  }
}
variable "vm_mem_alert_policy_parameters" {
  default = {
    auto_close_interval         = "604800s",
    threshold_duration_trouble  = "300s",
    threshold_value_trouble     = 80,
    threshold_duration_critical = "300s",
    threshold_value_critical    = 90,
    
  }
}
variable "vm_disk_alert_policy_parameters" {
  default = {
    auto_close_interval         = "604800s",
    threshold_duration_trouble  = "300s",
    threshold_value_trouble     = 80,
    threshold_duration_critical = "300s",
    threshold_value_critical    = 90,
    filter                      = "metric.label.\"device\"!=monitoring.regex.full_match(\"/dev/loop.*\") metric.label.\"device\"!=monitoring.regex.full_match(\"loop.*\")"
    
  }
}

# cloudsql policies
variable "cloudsql_filter" {
  default = ""
}
variable "cloudsql_cpu_alert_policy_parameters" {
  default = {
    auto_close_interval         = "604800s",
    threshold_duration_trouble  = "300s",
    threshold_value_trouble     = 0.8,
    threshold_duration_critical = "300s",
    threshold_value_critical    = 0.9,
    
  }
}
variable "cloudsql_mem_alert_policy_parameters" {
  default = {
    auto_close_interval         = "604800s",
    threshold_duration_trouble  = "300s",
    threshold_value_trouble     = 0.8,
    threshold_duration_critical = "300s",
    threshold_value_critical    = 0.9,
    
  }
}
variable "cloudsql_disk_alert_policy_parameters" {
  default = {
    auto_close_interval         = "604800s",
    threshold_duration_trouble  = "300s",
    threshold_value_trouble     = 0.8,
    threshold_duration_critical = "300s",
    threshold_value_critical    = 0.9,
    filter                      = "metric.label.\"device\"!=monitoring.regex.full_match(\"/dev/loop.*\") metric.label.\"device\"!=monitoring.regex.full_match(\"loop.*\")"
    
  }
}


# ==================
# terraform.tfvars
# ==================



# project = "eastern-crawler-342617"
# policy_labels = {
#   project_id = "eastern-crawler-342617",
#   customer   = "Collidus" 
  # only lowercase letters, numerals, underscores, and dashes
# }
